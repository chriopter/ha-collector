blueprint:
  name: Hue Tap Dial Z2M 
  domain: automation
  input:
    mqtt_topic:
      name: "MQTT Topic"
      description: "MQTT topic for the Philips Hue Tap Dial Switch"
      default: "zigbee2mqtt/<device name>"

    ## Target Light for Dimming (applies to all dial events)
    target_light:
      name: "Target Light for Dimming"
      description: "Choose the light to control with the dial rotations"
      selector:
        entity:
          domain: light

    ## Button 1 events
    button_1_press:
      name: "Button 1 Press"
      default: []
      selector:
        action: {}
    button_1_press_release:
      name: "Button 1 Press Release"
      default: []
      selector:
        action: {}
    button_1_hold:
      name: "Button 1 Hold"
      default: []
      selector:
        action: {}
    button_1_hold_release:
      name: "Button 1 Hold Release"
      default: []
      selector:
        action: {}

    ## Button 2 events
    button_2_press:
      name: "Button 2 Press"
      default: []
      selector:
        action: {}
    button_2_press_release:
      name: "Button 2 Press Release"
      default: []
      selector:
        action: {}
    button_2_hold:
      name: "Button 2 Hold"
      default: []
      selector:
        action: {}
    button_2_hold_release:
      name: "Button 2 Hold Release"
      default: []
      selector:
        action: {}

    ## Button 3 events
    button_3_press:
      name: "Button 3 Press"
      default: []
      selector:
        action: {}
    button_3_press_release:
      name: "Button 3 Press Release"
      default: []
      selector:
        action: {}
    button_3_hold:
      name: "Button 3 Hold"
      default: []
      selector:
        action: {}
    button_3_hold_release:
      name: "Button 3 Hold Release"
      default: []
      selector:
        action: {}

    ## Button 4 events
    button_4_press:
      name: "Button 4 Press"
      default: []
      selector:
        action: {}
    button_4_press_release:
      name: "Button 4 Press Release"
      default: []
      selector:
        action: {}
    button_4_hold:
      name: "Button 4 Hold"
      default: []
      selector:
        action: {}
    button_4_hold_release:
      name: "Button 4 Hold Release"
      default: []
      selector:
        action: {}

    ## Dial (dimming) events – Right (increase brightness)
    dial_rotate_right_step:
      name: "Dial Rotate Right – Step"
      description: "A small (step) increase in brightness."
      default: []
      selector:
        text:
          placeholder: "Event: dial_rotate_right_step"
    dial_rotate_right_slow:
      name: "Dial Rotate Right – Slow"
      description: "A slow increase in brightness."
      default: []
      selector:
        text:
          placeholder: "Event: dial_rotate_right_slow"
    brightness_step_up:
      name: "Brightness Step Up (Quarter Up)"
      description: "A larger, quarter-step increase in brightness."
      default: []
      selector:
        text:
          placeholder: "Event: brightness_step_up"
    dial_rotate_right_fast:
      name: "Dial Rotate Right – Fast"
      description: "A fast increase in brightness."
      default: []
      selector:
        text:
          placeholder: "Event: dial_rotate_right_fast"

    ## Dial (dimming) events – Left (decrease brightness)
    dial_rotate_left_step:
      name: "Dial Rotate Left – Step"
      description: "A small (step) decrease in brightness."
      default: []
      selector:
        text:
          placeholder: "Event: dial_rotate_left_step"
    dial_rotate_left_slow:
      name: "Dial Rotate Left – Slow"
      description: "A slow decrease in brightness."
      default: []
      selector:
        text:
          placeholder: "Event: dial_rotate_left_slow"
    brightness_step_down:
      name: "Brightness Step Down (Quarter Down)"
      description: "A larger, quarter-step decrease in brightness."
      default: []
      selector:
        text:
          placeholder: "Event: brightness_step_down"
    dial_rotate_left_fast:
      name: "Dial Rotate Left – Fast"
      description: "A fast decrease in brightness."
      default: []
      selector:
        text:
          placeholder: "Event: dial_rotate_left_fast"

    ## Numeric inputs for brightness adjustment (in percent)
    dial_rotate_right_step_pct:
      name: "Right – Step Increase (%)"
      description: "Brightness change for a right step event (e.g., 2 for 2% increase)"
      default: 2
      selector:
        number:
          mode: box
          min: 0
          max: 100
    dial_rotate_right_slow_pct:
      name: "Right – Slow Increase (%)"
      description: "Brightness change for a right slow event (e.g., 5 for 5% increase)"
      default: 5
      selector:
        number:
          mode: box
          min: 0
          max: 100
    brightness_step_up_pct:
      name: "Right – Quarter-Step Increase (%)"
      description: "Brightness change for a quarter-step increase (e.g., 25 for 25% increase)"
      default: 25
      selector:
        number:
          mode: box
          min: 0
          max: 100
    dial_rotate_right_fast_pct:
      name: "Right – Fast Increase (%)"
      description: "Brightness change for a right fast event (e.g., 10 for 10% increase)"
      default: 10
      selector:
        number:
          mode: box
          min: 0
          max: 100

    dial_rotate_left_step_pct:
      name: "Left – Step Decrease (%)"
      description: "Brightness change for a left step event (enter as a positive number; it will decrease brightness)"
      default: 2
      selector:
        number:
          mode: box
          min: 0
          max: 100
    dial_rotate_left_slow_pct:
      name: "Left – Slow Decrease (%)"
      description: "Brightness change for a left slow event (enter as a positive number; it will decrease brightness)"
      default: 5
      selector:
        number:
          mode: box
          min: 0
          max: 100
    brightness_step_down_pct:
      name: "Left – Quarter-Step Decrease (%)"
      description: "Brightness change for a quarter-step decrease (enter as a positive number; it will decrease brightness)"
      default: 25
      selector:
        number:
          mode: box
          min: 0
          max: 100
    dial_rotate_left_fast_pct:
      name: "Left – Fast Decrease (%)"
      description: "Brightness change for a left fast event (enter as a positive number; it will decrease brightness)"
      default: 10
      selector:
        number:
          mode: box
          min: 0
          max: 100

mode: parallel

trigger:
  - platform: mqtt
    topic: !input mqtt_topic

# We require a non-empty payload.
condition:
  - condition: template
    value_template: "{{ trigger.payload != '' }}"

action:
  # Create a variable 'event' that uses the JSON field (if available) or the plain text payload.
  - variables:
      event: >
        {% if trigger.payload.startswith('{') %}
          {{ trigger.payload_json.action }}
        {% else %}
          {{ trigger.payload }}
        {% endif %}
  - choose:
      # ––– Button events –––
      # Button 1
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_1_press' }}"
        sequence: !input button_1_press
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_1_press_release' }}"
        sequence: !input button_1_press_release
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_1_hold' }}"
        sequence: !input button_1_hold
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_1_hold_release' }}"
        sequence: !input button_1_hold_release

      # Button 2
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_2_press' }}"
        sequence: !input button_2_press
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_2_press_release' }}"
        sequence: !input button_2_press_release
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_2_hold' }}"
        sequence: !input button_2_hold
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_2_hold_release' }}"
        sequence: !input button_2_hold_release

      # Button 3
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_3_press' }}"
        sequence: !input button_3_press
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_3_press_release' }}"
        sequence: !input button_3_press_release
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_3_hold' }}"
        sequence: !input button_3_hold
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_3_hold_release' }}"
        sequence: !input button_3_hold_release

      # Button 4
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_4_press' }}"
        sequence: !input button_4_press
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_4_press_release' }}"
        sequence: !input button_4_press_release
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_4_hold' }}"
        sequence: !input button_4_hold
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_4_hold_release' }}"
        sequence: !input button_4_hold_release

      # ––– Dial (dimming) events –––
      # Right / Increase brightness
      - conditions:
          - condition: template
            value_template: "{{ event == 'dial_rotate_right_step' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
            data:
              brightness_step_pct: !input dial_rotate_right_step_pct
      - conditions:
          - condition: template
            value_template: "{{ event == 'dial_rotate_right_slow' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
            data:
              brightness_step_pct: !input dial_rotate_right_slow_pct
      - conditions:
          - condition: template
            value_template: "{{ event == 'brightness_step_up' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
            data:
              brightness_step_pct: !input brightness_step_up_pct
      - conditions:
          - condition: template
            value_template: "{{ event == 'dial_rotate_right_fast' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
            data:
              brightness_step_pct: !input dial_rotate_right_fast_pct

      # Left / Decrease brightness
      - conditions:
          - condition: template
            value_template: "{{ event == 'dial_rotate_left_step' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
            data:
              # Multiply by -1 to decrease brightness.
              brightness_step_pct: -1 * !input dial_rotate_left_step_pct
      - conditions:
          - condition: template
            value_template: "{{ event == 'dial_rotate_left_slow' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
            data:
              brightness_step_pct: -1 * !input dial_rotate_left_slow_pct
      - conditions:
          - condition: template
            value_template: "{{ event == 'brightness_step_down' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
            data:
              brightness_step_pct: -1 * !input brightness_step_down_pct
      - conditions:
          - condition: template
            value_template: "{{ event == 'dial_rotate_left_fast' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
            data:
              brightness_step_pct: -1 * !input dial_rotate_left_fast_pct
