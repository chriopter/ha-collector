blueprint:
  name: Hue Tap Dial Z2M v5
  domain: automation
  input:
    mqtt_topic:
      name: "MQTT Topic"
      description: "MQTT topic for the Philips Hue Tap Dial Switch"
      default: "zigbee2mqtt/<device name>"

    ## Button 1 events
    button_1_press:
      name: "Button 1 Press"
      default: []
      selector:
        action: {}
    button_1_press_release:
      name: "Button 1 Press Release"
      default: []
      selector:
        action: {}
    button_1_hold:
      name: "Button 1 Hold"
      default: []
      selector:
        action: {}
    button_1_hold_release:
      name: "Button 1 Hold Release"
      default: []
      selector:
        action: {}

    ## Button 2 events
    button_2_press:
      name: "Button 2 Press"
      default: []
      selector:
        action: {}
    button_2_press_release:
      name: "Button 2 Press Release"
      default: []
      selector:
        action: {}
    button_2_hold:
      name: "Button 2 Hold"
      default: []
      selector:
        action: {}
    button_2_hold_release:
      name: "Button 2 Hold Release"
      default: []
      selector:
        action: {}

    ## Button 3 events
    button_3_press:
      name: "Button 3 Press"
      default: []
      selector:
        action: {}
    button_3_press_release:
      name: "Button 3 Press Release"
      default: []
      selector:
        action: {}
    button_3_hold:
      name: "Button 3 Hold"
      default: []
      selector:
        action: {}
    button_3_hold_release:
      name: "Button 3 Hold Release"
      default: []
      selector:
        action: {}

    ## Button 4 events
    button_4_press:
      name: "Button 4 Press"
      default: []
      selector:
        action: {}
    button_4_press_release:
      name: "Button 4 Press Release"
      default: []
      selector:
        action: {}
    button_4_hold:
      name: "Button 4 Hold"
      default: []
      selector:
        action: {}
    button_4_hold_release:
      name: "Button 4 Hold Release"
      default: []
      selector:
        action: {}

    ## Dial events
    dial_rotate_right_step:
      name: "Dial Right Step"
      description: "Action for right step rotation"
      default: []
      selector:
        action: {}
    dial_rotate_right_slow:
      name: "Dial Right Slow"
      description: "Action for right slow rotation"
      default: []
      selector:
        action: {}
    dial_rotate_right_fast:
      name: "Dial Right Fast"
      description: "Action for right fast rotation"
      default: []
      selector:
        action: {}
    brightness_step_up:
      name: "Brightness Step Up"
      description: "Action for brightness step up"
      default: []
      selector:
        action: {}
    
    dial_rotate_left_step:
      name: "Dial Left Step"
      description: "Action for left step rotation"
      default: []
      selector:
        action: {}
    dial_rotate_left_slow:
      name: "Dial Left Slow"
      description: "Action for left slow rotation"
      default: []
      selector:
        action: {}
    dial_rotate_left_fast:
      name: "Dial Left Fast"
      description: "Action for left fast rotation"
      default: []
      selector:
        action: {}
    brightness_step_down:
      name: "Brightness Step Down"
      description: "Action for brightness step down"
      default: []
      selector:
        action: {}

mode: parallel

trigger:
  - platform: mqtt
    topic: !input mqtt_topic

condition:
  - condition: template
    value_template: "{{ trigger.payload_json.action is defined }}"

action:
  # Normalize the incoming event:
  - variables:
      event: "{{ trigger.payload_json.action }}"
  - choose:
      # ––– Button Events –––
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_1_press' }}"
        sequence: !input button_1_press
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_1_press_release' }}"
        sequence: !input button_1_press_release
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_1_hold' }}"
        sequence: !input button_1_hold
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_1_hold_release' }}"
        sequence: !input button_1_hold_release

      - conditions:
          - condition: template
            value_template: "{{ event == 'button_2_press' }}"
        sequence: !input button_2_press
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_2_press_release' }}"
        sequence: !input button_2_press_release
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_2_hold' }}"
        sequence: !input button_2_hold
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_2_hold_release' }}"
        sequence: !input button_2_hold_release

      - conditions:
          - condition: template
            value_template: "{{ event == 'button_3_press' }}"
        sequence: !input button_3_press
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_3_press_release' }}"
        sequence: !input button_3_press_release
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_3_hold' }}"
        sequence: !input button_3_hold
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_3_hold_release' }}"
        sequence: !input button_3_hold_release

      - conditions:
          - condition: template
            value_template: "{{ event == 'button_4_press' }}"
        sequence: !input button_4_press
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_4_press_release' }}"
        sequence: !input button_4_press_release
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_4_hold' }}"
        sequence: !input button_4_hold
      - conditions:
          - condition: template
            value_template: "{{ event == 'button_4_hold_release' }}"
        sequence: !input button_4_hold_release

      # ––– Dial Events –––
      - conditions:
          - condition: template
            value_template: "{{ event == 'dial_rotate_right_step' }}"
        sequence: !input dial_rotate_right_step
      - conditions:
          - condition: template
            value_template: "{{ event == 'dial_rotate_right_slow' }}"
        sequence: !input dial_rotate_right_slow
      - conditions:
          - condition: template
            value_template: "{{ event == 'brightness_step_up' }}"
        sequence: !input brightness_step_up
      - conditions:
          - condition: template
            value_template: "{{ event == 'dial_rotate_right_fast' }}"
        sequence: !input dial_rotate_right_fast

      - conditions:
          - condition: template
            value_template: "{{ event == 'dial_rotate_left_step' }}"
        sequence: !input dial_rotate_left_step
      - conditions:
          - condition: template
            value_template: "{{ event == 'dial_rotate_left_slow' }}"
        sequence: !input dial_rotate_left_slow
      - conditions:
          - condition: template
            value_template: "{{ event == 'brightness_step_down' }}"
        sequence: !input brightness_step_down
      - conditions:
          - condition: template
            value_template: "{{ event == 'dial_rotate_left_fast' }}"
        sequence: !input dial_rotate_left_fast
