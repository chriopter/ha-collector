blueprint:
  name: Hue Tap Dial Z2M
  domain: automation
  input:
    mqtt_topic:
      name: MQTT Topic
      description: Topic of the Philips Hue Tap Dial Switch
      default: zigbee2mqtt/<device name>
    light_entity:
      name: Light to Control
      selector:
        entity:
          domain: light
    # Button 1
    button_1_press:
      name: Button 1 Press
      default: []
      selector:
        action:
    button_1_press_release:
      name: Button 1 Press Release
      default: []
      selector:
        action:
    button_1_hold:
      name: Button 1 Hold
      default: []
      selector:
        action:
    button_1_hold_release:
      name: Button 1 Hold Release
      default: []
      selector:
        action:
    # Button 2
    button_2_press:
      name: Button 2 Press
      default: []
      selector:
        action:
    button_2_press_release:
      name: Button 2 Press Release
      default: []
      selector:
        action:
    button_2_hold:
      name: Button 2 Hold
      default: []
      selector:
        action:
    button_2_hold_release:
      name: Button 2 Hold Release
      default: []
      selector:
        action:
    # Button 3
    button_3_press:
      name: Button 3 Press
      default: []
      selector:
        action:
    button_3_press_release:
      name: Button 3 Press Release
      default: []
      selector:
        action:
    button_3_hold:
      name: Button 3 Hold
      default: []
      selector:
        action:
    button_3_hold_release:
      name: Button 3 Hold Release
      default: []
      selector:
        action:
    # Button 4
    button_4_press:
      name: Button 4 Press
      default: []
      selector:
        action:
    button_4_press_release:
      name: Button 4 Press Release
      default: []
      selector:
        action:
    button_4_hold:
      name: Button 4 Hold
      default: []
      selector:
        action:
    button_4_hold_release:
      name: Button 4 Hold Release
      default: []
      selector:
        action:
    

mode: parallel
max: 10
max_exceeded: silent

trigger:
  - platform: mqtt
    topic: !input mqtt_topic

condition:
  - condition: template
    value_template: "{{ trigger.payload_json.action != '' }}"

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_1_press' }}"
        sequence: !input button_1_press
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_1_press_release' }}"
        sequence: !input button_1_press_release
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_1_hold' }}"
        sequence: !input button_1_hold
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_1_hold_release' }}"
        sequence: !input button_1_hold_release
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_2_press' }}"
        sequence: !input button_2_press
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_2_press_release' }}"
        sequence: !input button_2_press_release
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_2_hold' }}"
        sequence: !input button_2_hold
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_2_hold_release' }}"
        sequence: !input button_2_hold_release
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_3_press' }}"
        sequence: !input button_3_press
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_3_press_release' }}"
        sequence: !input button_3_press_release
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_3_hold' }}"
        sequence: !input button_3_hold
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_3_hold_release' }}"
        sequence: !input button_3_hold_release
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_4_press' }}"
        sequence: !input button_4_press
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_4_press_release' }}"
        sequence: !input button_4_press_release
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_4_hold' }}"
        sequence: !input button_4_hold
      - conditions:
          - condition: template
            value_template: "{{ trigger.payload_json.action == 'button_4_hold_release' }}"
        sequence: !input button_4_hold_release
      - conditions:
          - condition: template
            value_template: >
              {{ trigger.payload_json.action in [
                'dial_rotate_right_step',
                'dial_rotate_right_slow',
                'dial_rotate_right_fast',
                'brightness_step_up',
                'dial_rotate_left_step',
                'dial_rotate_left_slow',
                'dial_rotate_left_fast',
                'brightness_step_down'
              ] }}
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light_entity
            data:
              brightness_pct: >
                {% set current = state_attr(states[trigger.target.entity_id], 'brightness')|default(0)|float / 255 * 100 %}
                {% if trigger.payload_json.action in ['dial_rotate_right_step', 'dial_rotate_right_slow', 'dial_rotate_right_fast', 'brightness_step_up'] %}
                  {{ [current + 16, 100]|min }}
                {% else %}
                  {{ [current - 16, 0]|max }}
                {% endif %}
